<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

<changeSet author="lestrada" id="HT012_v2-1">
<sql endDelimiter="GO" splitStatements="true">
<![CDATA[
-- ==========================================================================================
-- Author:      Laura Estrada
-- Create date: 17/03/2020
-- Description: Permite obtener el sueldo básico del funcionario para la nómina
--
-- Parameters:
--   @FuncionarioId:			Identificador del funcionario
--   @NominaId:					Identificador de la nómina
--
-- Returns:						
--	 Sueldo:					Sueldo Básico del funcionario.
-- ==========================================================================================


CREATE PROCEDURE [dbo].[USP_ObtenerSueldoBasico] (@FuncionarioId int, @NominaId int)  
AS
BEGIN

	---------------------------------------------
	-- Declaraciones
	---------------------------------------------
	DECLARE @SueldoBasico FLOAT  = 0;
	
	DECLARE @FechaInicioNomina DATE;
	DECLARE @FechaFinalNomina DATE;
	DECLARE @IdContrato INT;
	DECLARE @Sueldo FLOAT;
	DECLARE @FechaInicioContrato DATE;
	DECLARE @FechaFinContato DATE;
	DECLARE @DiasTrabajados INT;

	DECLARE @FechaInferior DATE;
	DECLARE @FechaSuperior DATE;	
	DECLARE @SueldoBasicoAcumulado FLOAT;
	DECLARE @DiasMesLaboral INT  = 30;
	---------------------------------------------
	-- Proceso
	---------------------------------------------
	-- Obtener período de liquidación de la nómina 
	IF NOT EXISTS(SELECT * FROM [dbo].[Nomina] WHERE Id = @NominaId) 
		RETURN 

	--Asigna valor a variable
	SELECT @FechaInicioNomina = FechaInicio, @FechaFinalNomina = FechaFinal FROM [dbo].[Nomina] WHERE Id = @NominaId;

	-- Obtiene los contratos / otros sis activos en el período
	DECLARE CUR_Contratos CURSOR LOCAL FOR 

		   SELECT con.Id, con.sueldo, con.FechaInicio, con.FechaFinalizacion FROM Contrato con WHERE  con.FuncionarioId = @FuncionarioId
          		UNION
           SELECT otrosi.Id,otrosi.sueldo, otrosi.FechaAplicacion, otrosi.FechaFinalizacion FROM ContratoOtroSi otrosi
           INNER JOIN  Contrato c ON c.Id =  otrosi.ContratoId
           WHERE c.FuncionarioId = @FuncionarioId

	OPEN CUR_Contratos

	FETCH NEXT FROM CUR_Contratos INTO @IdContrato, @Sueldo, @FechaInicioContrato, @FechaFinContato

	WHILE @@fetch_status = 0
	BEGIN
		SET @FechaInferior = @FechaInicioContrato;
		SET @FechaSuperior = @FechaFinContato;

		IF @FechaInicioContrato < @FechaInicioNomina
		BEGIN
			SET @FechaInferior = @FechaInicioNomina;
		END

		IF @FechaFinContato > @FechaFinalNomina
		BEGIN
			SET @FechaSuperior = @FechaFinalNomina;
		END

		-- Obtiene Dias a pagar 
		EXEC @DiasTrabajados = [dbo].[USP_ObtenerDiasApagar]
				@FuncionarioId = @FuncionarioId,
				@FechaInicial = @FechaInferior,
				@FechaFinal = @FechaSuperior 

		SET @SueldoBasico = @SueldoBasico +(@Sueldo *  @DiasTrabajados  / @DiasMesLaboral)
	
		FETCH NEXT FROM CUR_Contratos INTO @IdContrato, @Sueldo, @FechaInicioContrato, @FechaFinContato
	END

	CLOSE CUR_Contratos
	DEALLOCATE CUR_Contratos

	RETURN  @SueldoBasico;
	
END

]]>
</sql>
<rollback>
DROP PROCEDURE [dbo].[USP_ObtenerSueldoBasico];
</rollback>
</changeSet>
</databaseChangeLog>