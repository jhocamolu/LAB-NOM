// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reclutamiento.Infraestructura.DbContexto;

namespace Reclutamiento.Migrations
{
    [DbContext(typeof(ReclutamientoDbContext))]
    [Migration("20200901015819_reclutamientosprint14001")]
    partial class reclutamientosprint14001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("reclutamiento")
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiV3.Models.ActividadEconomica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ActividadEconomica");
                });

            modelBuilder.Entity("ApiV3.Models.Administradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Dv")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoAdministradoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoAdministradoraId");

                    b.ToTable("Administradora");
                });

            modelBuilder.Entity("ApiV3.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("CostoSicom")
                        .HasColumnType("bit");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NivelCargoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ObjetivoCargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NivelCargoId");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("ApiV3.Models.CargoDependencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DependenciaId")
                        .HasColumnType("int");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("DependenciaId");

                    b.ToTable("CargoDependencia");
                });

            modelBuilder.Entity("ApiV3.Models.CargoReporta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoDependenciaId")
                        .HasColumnType("int");

                    b.Property<int>("CargoJefeId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("JefeInmediato")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CargoDependenciaId");

                    b.HasIndex("CargoJefeId");

                    b.ToTable("CargoReporta");
                });

            modelBuilder.Entity("ApiV3.Models.CentroCosto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CentroCosto");
                });

            modelBuilder.Entity("ApiV3.Models.CentroOperativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("CentroOperativo");
                });

            modelBuilder.Entity("ApiV3.Models.ClaseAportante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ClaseAportante");
                });

            modelBuilder.Entity("ApiV3.Models.ClaseAportanteTipoAportante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaseAportanteId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoAportanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClaseAportanteId");

                    b.HasIndex("TipoAportanteId");

                    b.ToTable("ClaseAportanteTipoAportante");
                });

            modelBuilder.Entity("ApiV3.Models.ClaseLibretaMilitar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ClaseLibretaMilitar");
                });

            modelBuilder.Entity("ApiV3.Models.Dependencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Dependencia");
                });

            modelBuilder.Entity("ApiV3.Models.DivisionPoliticaNivel1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("DivisionPoliticaNivel1");
                });

            modelBuilder.Entity("ApiV3.Models.DivisionPoliticaNivel2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DivisionPoliticaNivel1Id")
                        .HasColumnType("int");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionPoliticaNivel1Id");

                    b.ToTable("DivisionPoliticaNivel2");
                });

            modelBuilder.Entity("ApiV3.Models.EstadoCivil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EstadoCivil");
                });

            modelBuilder.Entity("ApiV3.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adjunto")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ClaseLibretaMilitarId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronicoCorporativo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CorreoElectronicoPersonal")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CriterioBusqueda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DigitoVerificacion")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Distrito")
                        .HasColumnType("int");

                    b.Property<int>("DivisionPoliticaNivel2ExpedicionDocumentoId")
                        .HasColumnType("int");

                    b.Property<int>("DivisionPoliticaNivel2OrigenId")
                        .HasColumnType("int");

                    b.Property<int>("DivisionPoliticaNivel2ResidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<int>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("FechaExpedicionDocumento")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LicenciaConduccionAFechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int?>("LicenciaConduccionAId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LicenciaConduccionBFechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int?>("LicenciaConduccionBId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LicenciaConduccionCFechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int?>("LicenciaConduccionCId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("NumeroCalzado")
                        .HasColumnType("float");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroLibreta")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("OcupacionId")
                        .HasColumnType("int");

                    b.Property<bool>("Pensionado")
                        .HasColumnType("bit");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.Property<string>("TallaCamisa")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TallaPantalon")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelefonoFijo")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoSangreId")
                        .HasColumnType("int");

                    b.Property<int>("TipoViviendaId")
                        .HasColumnType("int");

                    b.Property<bool>("UsaLentes")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClaseLibretaMilitarId");

                    b.HasIndex("DivisionPoliticaNivel2ExpedicionDocumentoId");

                    b.HasIndex("DivisionPoliticaNivel2OrigenId");

                    b.HasIndex("DivisionPoliticaNivel2ResidenciaId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("LicenciaConduccionAId");

                    b.HasIndex("LicenciaConduccionBId");

                    b.HasIndex("LicenciaConduccionCId");

                    b.HasIndex("OcupacionId");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoSangreId");

                    b.HasIndex("TipoViviendaId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("ApiV3.Models.HojaDeVida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adjunto")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ClaseLibretaMilitarId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronicoPersonal")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("DigitoVerificacion")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Distrito")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionPoliticaNivel2ExpedicionDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionPoliticaNivel2OrigenId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionPoliticaNivel2ResidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaExpedicionDocumento")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LicenciaConduccionAFechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int?>("LicenciaConduccionAId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LicenciaConduccionBFechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int?>("LicenciaConduccionBId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LicenciaConduccionCFechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int?>("LicenciaConduccionCId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nit")
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("NumeroCalzado")
                        .HasColumnType("float");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroLibreta")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("OcupacionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Pensionado")
                        .HasColumnType("bit");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SexoId")
                        .HasColumnType("int");

                    b.Property<string>("TallaCamisa")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TallaPantalon")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelefonoFijo")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoSangreId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoViviendaId")
                        .HasColumnType("int");

                    b.Property<bool?>("UsaLentes")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClaseLibretaMilitarId");

                    b.HasIndex("DivisionPoliticaNivel2ExpedicionDocumentoId");

                    b.HasIndex("DivisionPoliticaNivel2OrigenId");

                    b.HasIndex("DivisionPoliticaNivel2ResidenciaId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("LicenciaConduccionAId");

                    b.HasIndex("LicenciaConduccionBId");

                    b.HasIndex("LicenciaConduccionCId");

                    b.HasIndex("OcupacionId");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoSangreId");

                    b.HasIndex("TipoViviendaId");

                    b.ToTable("HojaDeVida","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.InformacionBasica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActividadEconomicaId")
                        .HasColumnType("int");

                    b.Property<int>("ArlId")
                        .HasColumnType("int");

                    b.Property<bool>("BeneficiarioImpuestoEquidad")
                        .HasColumnType("bit");

                    b.Property<bool>("BeneficiarioLey1429De2010")
                        .HasColumnType("bit");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("ClaseAportanteTipoAportanteId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DigitoVerificacion")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DivisionPoliticaNivel2Id")
                        .HasColumnType("int");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<string>("Fax")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaConstitucion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NaturalezaJuridicaId")
                        .HasColumnType("int");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("OperadorPagoId")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoContribuyenteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Web")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ActividadEconomicaId");

                    b.HasIndex("ArlId");

                    b.HasIndex("CargoId");

                    b.HasIndex("ClaseAportanteTipoAportanteId");

                    b.HasIndex("DivisionPoliticaNivel2Id");

                    b.HasIndex("NaturalezaJuridicaId");

                    b.HasIndex("OperadorPagoId");

                    b.HasIndex("TipoContribuyenteId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("InformacionBasica","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.LicenciaConduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("LicenciaConduccion");
                });

            modelBuilder.Entity("ApiV3.Models.MotivoVacante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("RequiereNombreAQuienReemplaza")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MotivoVacante");
                });

            modelBuilder.Entity("ApiV3.Models.NaturalezaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("NaturalezaJuridica");
                });

            modelBuilder.Entity("ApiV3.Models.NivelCargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("NivelCargo");
                });

            modelBuilder.Entity("ApiV3.Models.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("EnEjecucion")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Notificacion","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.NotificacionDestinatario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NotificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("NotificacionId");

                    b.ToTable("NotificacionDestinatario","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.NotificacionPlantilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Plantilla")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.HasKey("Id");

                    b.ToTable("NotificacionPlantilla","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.Ocupacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Ocupacion");
                });

            modelBuilder.Entity("ApiV3.Models.OperadorPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PaginaWeb")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("OperadorPago");
                });

            modelBuilder.Entity("ApiV3.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("ApiV3.Models.RequisicionPersonal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CargoDependenciaSolicitadoId")
                        .HasColumnType("int");

                    b.Property<int>("CargoDependenciaSolicitanteId")
                        .HasColumnType("int");

                    b.Property<int>("CentroCostoId")
                        .HasColumnType("int");

                    b.Property<int?>("CentroOperativoSolicitadoId")
                        .HasColumnType("int");

                    b.Property<int?>("CentroOperativoSolicitanteId")
                        .HasColumnType("int");

                    b.Property<string>("CompetenciaCargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("CompetenciaPortalReclutamiento")
                        .HasColumnType("bit");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DivisionPoliticaNivel2Id")
                        .HasColumnType("int");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaAutorizacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("FuncionarioAQuienReemplazaId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioSolicitanteId")
                        .HasColumnType("int");

                    b.Property<string>("Justificacion")
                        .HasColumnType("text");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("MotivoVacanteId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("PerfilCargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("PerfilPortalReclutamiento")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("money");

                    b.Property<bool?>("SalarioPortalReclutamiento")
                        .HasColumnType("bit");

                    b.Property<int>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoReclutamiento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoDependenciaSolicitadoId");

                    b.HasIndex("CargoDependenciaSolicitanteId");

                    b.HasIndex("CentroCostoId");

                    b.HasIndex("CentroOperativoSolicitadoId");

                    b.HasIndex("CentroOperativoSolicitanteId");

                    b.HasIndex("DivisionPoliticaNivel2Id");

                    b.HasIndex("FuncionarioAQuienReemplazaId");

                    b.HasIndex("FuncionarioSolicitanteId");

                    b.HasIndex("MotivoVacanteId");

                    b.HasIndex("TipoContratoId");

                    b.ToTable("RequisicionPersonal","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.Sexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Sexo","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.TareaProgramada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("EnEjecucion")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Instruccion")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Periodicidad")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TareaProgramada","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.TipoAdministradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("TarifaAporteEmpresa")
                        .HasColumnType("decimal(19,3)");

                    b.Property<decimal>("TarifaAporteFuncionario")
                        .HasColumnType("decimal(19,3)");

                    b.Property<decimal?>("TarifaAporteTotal")
                        .HasColumnType("decimal(19,3)");

                    b.HasKey("Id");

                    b.ToTable("TipoAdministradora");
                });

            modelBuilder.Entity("ApiV3.Models.TipoAportante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoAportante");
                });

            modelBuilder.Entity("ApiV3.Models.TipoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadProrrogas")
                        .HasColumnType("int");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DocumentoSlug")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DuracionMaxima")
                        .HasColumnType("int");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("TerminoIndefinido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoContrato");
                });

            modelBuilder.Entity("ApiV3.Models.TipoContribuyente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Persona")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoContribuyente");
                });

            modelBuilder.Entity("ApiV3.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoDian")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CodigoPila")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EquivalenteBancario")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Validacion")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento","dbo");
                });

            modelBuilder.Entity("ApiV3.Models.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoPersona");
                });

            modelBuilder.Entity("ApiV3.Models.TipoSangre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoSangre");
                });

            modelBuilder.Entity("ApiV3.Models.TipoVivienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("char(10)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoVivienda");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Reclutamiento.Models.UsuarioAplicacion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("HojaDeVidaId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenGhestic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("HojaDeVidaId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ApiV3.Models.Administradora", b =>
                {
                    b.HasOne("ApiV3.Models.TipoAdministradora", "TipoAdministradora")
                        .WithMany()
                        .HasForeignKey("TipoAdministradoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.Cargo", b =>
                {
                    b.HasOne("ApiV3.Models.NivelCargo", "NivelCargo")
                        .WithMany()
                        .HasForeignKey("NivelCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.CargoDependencia", b =>
                {
                    b.HasOne("ApiV3.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.Dependencia", "Dependencia")
                        .WithMany()
                        .HasForeignKey("DependenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.CargoReporta", b =>
                {
                    b.HasOne("ApiV3.Models.CargoDependencia", "CargoDependencia")
                        .WithMany()
                        .HasForeignKey("CargoDependenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.Cargo", "CargoJefe")
                        .WithMany("MeReportan")
                        .HasForeignKey("CargoJefeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.ClaseAportanteTipoAportante", b =>
                {
                    b.HasOne("ApiV3.Models.ClaseAportante", "ClaseAportante")
                        .WithMany()
                        .HasForeignKey("ClaseAportanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoAportante", "TipoAportante")
                        .WithMany()
                        .HasForeignKey("TipoAportanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.DivisionPoliticaNivel1", b =>
                {
                    b.HasOne("ApiV3.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.DivisionPoliticaNivel2", b =>
                {
                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel1", "DivisionPoliticaNivel1")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.Funcionario", b =>
                {
                    b.HasOne("ApiV3.Models.ClaseLibretaMilitar", "ClaseLibretaMilitar")
                        .WithMany()
                        .HasForeignKey("ClaseLibretaMilitarId");

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2ExpedicionDocumento")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2ExpedicionDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2Origen")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2OrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2Residencia")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2ResidenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.EstadoCivil", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("EstadoCivilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.LicenciaConduccion", "LicenciaConduccionA")
                        .WithMany()
                        .HasForeignKey("LicenciaConduccionAId");

                    b.HasOne("ApiV3.Models.LicenciaConduccion", "LicenciaConduccionB")
                        .WithMany()
                        .HasForeignKey("LicenciaConduccionBId");

                    b.HasOne("ApiV3.Models.LicenciaConduccion", "LicenciaConduccionC")
                        .WithMany()
                        .HasForeignKey("LicenciaConduccionCId");

                    b.HasOne("ApiV3.Models.Ocupacion", "Ocupacion")
                        .WithMany()
                        .HasForeignKey("OcupacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoSangre", "TipoSangre")
                        .WithMany()
                        .HasForeignKey("TipoSangreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoVivienda", "TipoVivienda")
                        .WithMany()
                        .HasForeignKey("TipoViviendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.HojaDeVida", b =>
                {
                    b.HasOne("ApiV3.Models.ClaseLibretaMilitar", "ClaseLibretaMilitar")
                        .WithMany()
                        .HasForeignKey("ClaseLibretaMilitarId");

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2ExpedicionDocumento")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2ExpedicionDocumentoId");

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2Origen")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2OrigenId");

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2Residencia")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2ResidenciaId");

                    b.HasOne("ApiV3.Models.EstadoCivil", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("EstadoCivilId");

                    b.HasOne("ApiV3.Models.LicenciaConduccion", "LicenciaConduccionA")
                        .WithMany()
                        .HasForeignKey("LicenciaConduccionAId");

                    b.HasOne("ApiV3.Models.LicenciaConduccion", "LicenciaConduccionB")
                        .WithMany()
                        .HasForeignKey("LicenciaConduccionBId");

                    b.HasOne("ApiV3.Models.LicenciaConduccion", "LicenciaConduccionC")
                        .WithMany()
                        .HasForeignKey("LicenciaConduccionCId");

                    b.HasOne("ApiV3.Models.Ocupacion", "Ocupacion")
                        .WithMany()
                        .HasForeignKey("OcupacionId");

                    b.HasOne("ApiV3.Models.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoSangre", "TipoSangre")
                        .WithMany()
                        .HasForeignKey("TipoSangreId");

                    b.HasOne("ApiV3.Models.TipoVivienda", "TipoVivienda")
                        .WithMany()
                        .HasForeignKey("TipoViviendaId");
                });

            modelBuilder.Entity("ApiV3.Models.InformacionBasica", b =>
                {
                    b.HasOne("ApiV3.Models.ActividadEconomica", "ActividadEconomica")
                        .WithMany()
                        .HasForeignKey("ActividadEconomicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.Administradora", "Arl")
                        .WithMany()
                        .HasForeignKey("ArlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.ClaseAportanteTipoAportante", "ClaseAportanteTipoAportante")
                        .WithMany()
                        .HasForeignKey("ClaseAportanteTipoAportanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.NaturalezaJuridica", "NaturalezaJuridica")
                        .WithMany()
                        .HasForeignKey("NaturalezaJuridicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.OperadorPago", "OperadorPago")
                        .WithMany()
                        .HasForeignKey("OperadorPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoContribuyente", "TipoContribuyente")
                        .WithMany()
                        .HasForeignKey("TipoContribuyenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoPersona", "TipoPersona")
                        .WithMany()
                        .HasForeignKey("TipoPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.NotificacionDestinatario", b =>
                {
                    b.HasOne("ApiV3.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("ApiV3.Models.Notificacion", "Notificacion")
                        .WithMany()
                        .HasForeignKey("NotificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiV3.Models.RequisicionPersonal", b =>
                {
                    b.HasOne("ApiV3.Models.CargoDependencia", "CargoDependenciaSolicitado")
                        .WithMany()
                        .HasForeignKey("CargoDependenciaSolicitadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.CargoDependencia", "CargoDependenciaSolicitante")
                        .WithMany()
                        .HasForeignKey("CargoDependenciaSolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.CentroCosto", "CentroCosto")
                        .WithMany()
                        .HasForeignKey("CentroCostoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.CentroOperativo", "CentroOperativoSolicitado")
                        .WithMany()
                        .HasForeignKey("CentroOperativoSolicitadoId");

                    b.HasOne("ApiV3.Models.CentroOperativo", "CentroOperativoSolicitante")
                        .WithMany()
                        .HasForeignKey("CentroOperativoSolicitanteId");

                    b.HasOne("ApiV3.Models.DivisionPoliticaNivel2", "DivisionPoliticaNivel2")
                        .WithMany()
                        .HasForeignKey("DivisionPoliticaNivel2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.Funcionario", "FuncionarioAQuienReemplaza")
                        .WithMany()
                        .HasForeignKey("FuncionarioAQuienReemplazaId");

                    b.HasOne("ApiV3.Models.Funcionario", "FuncionarioSolicitante")
                        .WithMany()
                        .HasForeignKey("FuncionarioSolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.MotivoVacante", "MotivoVacante")
                        .WithMany()
                        .HasForeignKey("MotivoVacanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiV3.Models.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Reclutamiento.Models.UsuarioAplicacion", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Reclutamiento.Models.UsuarioAplicacion", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reclutamiento.Models.UsuarioAplicacion", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Reclutamiento.Models.UsuarioAplicacion", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Reclutamiento.Models.UsuarioAplicacion", b =>
                {
                    b.HasOne("ApiV3.Models.HojaDeVida", "HojaDeVida")
                        .WithMany()
                        .HasForeignKey("HojaDeVidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
