// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plantillas.Models;

namespace Plantillas.Migrations
{
    [DbContext(typeof(PlantillasDbContext))]
    partial class PlantillasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Plantillas.Models.ComplementoPlantilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alto")
                        .IsRequired();

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CuerpoDocumento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int>("GrupoDocumentoId");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDocumentoId");

                    b.ToTable("ComplementoPlantilla");
                });

            modelBuilder.Entity("Plantillas.Models.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int>("GrupoDocumentoId");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Slug");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDocumentoId");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("Plantillas.Models.Etiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Etiqueta");
                });

            modelBuilder.Entity("Plantillas.Models.GrupoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Servicio")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("GrupoDocumento");
                });

            modelBuilder.Entity("Plantillas.Models.GrupoDocumentoEtiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campo")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("EtiquetaId");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<int>("GrupoDocumentoId");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ServicioFijoId");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDocumentoId");

                    b.HasIndex("ServicioFijoId");

                    b.HasIndex("EtiquetaId", "GrupoDocumentoId")
                        .IsUnique();

                    b.ToTable("GrupoDocumentoEtiqueta");
                });

            modelBuilder.Entity("Plantillas.Models.Plantilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CuerpoDocumento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DocumentoId");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EncabezadoId");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<DateTime>("FechaVigencia")
                        .HasColumnType("date");

                    b.Property<int>("GrupoDocumentoId");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("PiePaginaId");

                    b.Property<string>("Version")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("EncabezadoId");

                    b.HasIndex("GrupoDocumentoId");

                    b.HasIndex("PiePaginaId");

                    b.ToTable("Plantilla");
                });

            modelBuilder.Entity("Plantillas.Models.ServicioFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EliminadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("FechaCreacion");

                    b.Property<DateTime?>("FechaEliminacion");

                    b.Property<DateTime?>("FechaModificacion");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Servicio")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("ServicioFijo");
                });

            modelBuilder.Entity("Plantillas.Models.ComplementoPlantilla", b =>
                {
                    b.HasOne("Plantillas.Models.GrupoDocumento", "GrupoDocumento")
                        .WithMany()
                        .HasForeignKey("GrupoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Plantillas.Models.Documento", b =>
                {
                    b.HasOne("Plantillas.Models.GrupoDocumento", "GrupoDocumentos")
                        .WithMany()
                        .HasForeignKey("GrupoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Plantillas.Models.GrupoDocumentoEtiqueta", b =>
                {
                    b.HasOne("Plantillas.Models.Etiqueta", "Etiqueta")
                        .WithMany("Etiquetas")
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Plantillas.Models.GrupoDocumento", "GrupoDocumento")
                        .WithMany("GrupoEtiquetaDocumento")
                        .HasForeignKey("GrupoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Plantillas.Models.ServicioFijo", "ServicioFijo")
                        .WithMany()
                        .HasForeignKey("ServicioFijoId");
                });

            modelBuilder.Entity("Plantillas.Models.Plantilla", b =>
                {
                    b.HasOne("Plantillas.Models.Documento", "Documento")
                        .WithMany()
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Plantillas.Models.ComplementoPlantilla", "ComplementoEncabezado")
                        .WithMany("Encabezados")
                        .HasForeignKey("EncabezadoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Plantillas.Models.GrupoDocumento", "GrupoDocumento")
                        .WithMany("Plantilla")
                        .HasForeignKey("GrupoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Plantillas.Models.ComplementoPlantilla", "ComplementoPiePagina")
                        .WithMany("PiePaginas")
                        .HasForeignKey("PiePaginaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
