// -----------------------------------------------------------------------------------------------------
// @ Custom Alcanos maps for Fuse
// -----------------------------------------------------------------------------------------------------

$alcanos-green : (
    50      : #f1f8e9,
    100     : #dcedc8,
    200     : #c5e1a5,
    300     : #aed581,
    400     : #9ccc65,
    500     : #8bc34a,
    600     : #6e992e,
    700     : #689f38,
    800     : #558b2f,
    900     : #33691e,
    A100    : #ccff90,
    A200    : #b2ff59,
    A400    : #76ff03,
    A700    : #64dd17,
    contrast: (
        50  : rgba(black, 0.87),
        100 : rgba(black, 0.87),
        200 : rgba(black, 0.87),
        300 : rgba(black, 0.87),
        400 : rgba(black, 0.87),
        500 : white,
        600 : white,
        700 : white,
        800 : white,
        900 : rgba(white, 0.87),
        A100: rgba(black, 0.87),
        A200: rgba(black, 0.87),
        A400: rgba(black, 0.87),
        A700: white
    )
);

// -----------------------------------------------------------------------------------------------------
// @ Custom color maps for Fuse
// -----------------------------------------------------------------------------------------------------
$fuse-white: (
    500: white,
    contrast: (
        500: $dark-primary-text
    )
);

$fuse-black: (
    500: black,
    contrast: (
        500: $light-primary-text,
    )
);

$fuse-navy: (
    50: #ECECEE,
    100: #C5C6CB,
    200: #9EA1A9,
    300: #7D818C,
    400: #5C616F,
    500: #3C4252,
    600: #353A48,
    700: #0c2a3e,
    800: #262933,
    900: #151F36,
    A100: #C5C6CB,
    A200: #9EA1A9,
    A400: #5C616F,
    A700: #2D323E,
    contrast: (
        50: $dark-primary-text,
        100: $dark-primary-text,
        200: $dark-primary-text,
        300: $light-primary-text,
        400: $light-primary-text,
        500: $light-primary-text,
        600: $light-primary-text,
        700: $light-primary-text,
        800: $light-primary-text,
        900: $light-primary-text,
        A100: $dark-primary-text,
        A200: $light-primary-text,
        A400: $light-primary-text,
        A700: $light-primary-text,
    )
);

// Generate Fuse color classes for custom palettes
$custom_palettes: (
    fuse-white: $fuse-white,
    fuse-black: $fuse-black,
    fuse-navy: $fuse-navy
);

@include fuse-color-classes($custom_palettes);

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------

// Angular Material typography
$typography: mat-typography-config(
    $font-family: 'Muli, Helvetica Neue, Arial, sans-serif',
    $title: mat-typography-level(20px, 32px, 600),
    $body-2: mat-typography-level(14px, 24px, 600),
    $button: mat-typography-level(14px, 14px, 600),
    $input: mat-typography-level(16px, 1.125, 400) // line-height must be unitless !!!
);

// Setup the typography
@include angular-material-typography($typography);

// -----------------------------------------------------------------------------------------------------
// @ Component theming
// -----------------------------------------------------------------------------------------------------

// Import app and page component themes here to enable theming for them
@import "src/app/layout/components/chat-panel/chat-panel.theme";
@import "src/app/layout/components/toolbar/toolbar.theme";


@import "src/app/main/autorizacion/login/login.theme";


// Define a mixin for easier access
@mixin components-theme($theme) {

    // Layout components
    @include chat-panel-theme($theme);
    @include toolbar-theme($theme);


    @include login-theme($theme);

}

// -----------------------------------------------------------------------------------------------------
// @ Define the default theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$default-primary-palette: mat-palette($fuse-navy);
$default-accent-palette: mat-palette( $alcanos-green, 600, 400, 700);
$default-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$theme: mat-light-theme($default-primary-palette, $default-accent-palette, $default-warn-palette);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-default {

    // Create an Angular Material theme from the $theme map
    @include angular-material-theme($theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($theme);

    // Apply the theme to the user components
    @include components-theme($theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $default-primary-palette,
        accent: $default-accent-palette,
        warn: $default-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a yellow light theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$yellow-light-theme-primary-palette: mat-palette($fuse-navy, 600, 400, 700);
$yellow-light-theme-accent-palette: mat-palette($mat-yellow, 600, 400, 700);
$yellow-light-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$yellow-light-theme: mat-light-theme($yellow-light-theme-primary-palette, $yellow-light-theme-accent-palette, $yellow-light-theme-warn-palette);

// Add ".theme-yellow-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-yellow-light {

    // Generate the Angular Material theme
    @include angular-material-theme($yellow-light-theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($yellow-light-theme);

    // Apply the theme to the user components
    @include components-theme($yellow-light-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $yellow-light-theme-primary-palette,
        accent: $yellow-light-theme-accent-palette,
        warn: $yellow-light-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a blue-gray dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$blue-gray-dark-theme-primary-palette: mat-palette($mat-blue);
$blue-gray-dark-theme-accent-palette: mat-palette($mat-blue-gray);
$blue-gray-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$blue-gray-dark-theme: mat-dark-theme($blue-gray-dark-theme-primary-palette, $blue-gray-dark-theme-accent-palette, $blue-gray-dark-theme-warn-palette);

// Add ".theme-blue-gray-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-gray-dark {

    // Generate the Angular Material theme
    @include angular-material-theme($blue-gray-dark-theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($blue-gray-dark-theme);

    // Apply the theme to the user components
    @include components-theme($blue-gray-dark-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $blue-gray-dark-theme-primary-palette,
        accent: $blue-gray-dark-theme-accent-palette,
        warn: $blue-gray-dark-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a pink dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$pink-dark-theme-primary-palette: mat-palette($mat-pink);
$pink-dark-theme-accent-palette: mat-palette($mat-pink);
$pink-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$pink-dark-theme: mat-dark-theme($pink-dark-theme-primary-palette, $pink-dark-theme-accent-palette, $pink-dark-theme-warn-palette);

// Add ".theme-pink-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-pink-dark {

    // Generate the Angular Material theme
    @include angular-material-theme($pink-dark-theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($pink-dark-theme);

    // Apply the theme to the user components
    @include components-theme($pink-dark-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $pink-dark-theme-primary-palette,
        accent: $pink-dark-theme-accent-palette,
        warn: $pink-dark-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

 @import "@alcanos/scss/snackbar";

/*
* Apartir de este espacio luego de la integraci√≥n de alcanos borrar
*/
.error-snackbar {
    background: #e2564b !important;
    color: rgba($color: #FFF, $alpha: 1) !important;
    button {
        color: rgba($color: #FFF, $alpha: 1) !important;
    }
}
.exito-snackbar {
    background: #6e992e !important;
    color: rgba($color: #FFF, $alpha: 1) !important;
    button {
        color: rgba($color: #FFF, $alpha: 1) !important;
    }
}
.informativo-snackbar {
    background: #007cc0 !important;
    color: rgba($color: #FFF, $alpha: 1) !important;
    button {
        color: rgba($color: #FFF, $alpha: 1) !important;
    }
}
.advertencia-snackbar {
    background: #ef6100 !important;
    color: rgba($color: #FFF, $alpha: 1) !important;
    button {
        color: rgba($color: #FFF, $alpha: 1) !important;
    }
}

.content{
    .mat-elevation-z8{
        background: white;
    }
}
.ck-editor__editable{
    min-height: 500px;
    i{
        font-family: Arial, Helvetica, sans-serif !important;
        font-style: italic;
        font-size: inherit;
        width: inherit;
        height: inherit;
        min-width : inherit;
        min-height : inherit;
        line-height: normal;
        color: rgba(0, 0, 0, 0.87) !important;
    }
}


.ck .ck-widget.ck-widget_selected, .ck .ck-widget.ck-widget_selected:hover{
    outline : #6e992e solid !important;
}


table.simple {
    margin: 0!important;
    padding: 0!important;
    width: 100%;
    border: none;
    border-spacing: 0;
    text-align: left !important;
    th{
        padding: 0px !important;
        padding-top: 5px!important;
        padding-bottom: 5px!important;
    }
    td{
        padding: 0px !important;
        padding-top: 5px!important;
        padding-bottom: 5px!important;
    }
}

.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button, 
.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{
    width: 1.5em !important;
}

mat-form-field mat-label {
    background-color: rgba(255, 255, 255, 0.9)!important;
    padding-right: 5px;
}
.mat-form-field-required-marker {
   background-color: rgba(255, 255, 255, 0.9) !important;
   padding-right: 10px;
}

.mat-form-field-appearance-outline .mat-form-field-wrapper {
    margin: 0.50em 0 !important;
}
