<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

<changeSet author="rsabogal" id="USP_ObtenerDiasAPagarPrima_V2">
<comment>Migración general</comment>
<sql endDelimiter="GO" splitStatements="true">
<![CDATA[
IF OBJECT_ID('dbo.USP_ObtenerDiasAPagarPrima', 'P') IS NULL
BEGIN
    EXECUTE ('CREATE PROCEDURE dbo.USP_ObtenerDiasAPagarPrima as SELECT 1');
END;
GO
/****** Object:  StoredProcedure [dbo].[USP_ObtenerDiasAPagarPrima]    Script Date: 18/01/2021 11:36:42 a. m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ==========================================================================================
-- Author:      Reynaldo Andrés Sabogal
-- Create date: 11/01/2021
-- Description: Pemite obtener los días a pagar de prima legal
--
-- Parameters:
--   @FuncionarioId:			Identificador del funcionario
--	 @Tipo						Primas: Prima legal, Definitivo: Liquidación de prima legal.
--   @Cantidad:				    Parámetro de salida con la cantidad de días a pagar	 
--
-- Returns:						
--	 Dias:						Días a pagar
-- ==========================================================================================
ALTER PROCEDURE [dbo].[USP_ObtenerDiasAPagarPrima]
(@FuncionarioId INT,
 @Tipo			VARCHAR(255),
 @Cantidad      INT OUTPUT
)
AS
BEGIN
	
    --------------------------------------------------------------------------
    -- Instrucciones de configuración y manejo de errores
    --------------------------------------------------------------------------
    SET XACT_ABORT, NOCOUNT, ANSI_NULLS, QUOTED_IDENTIFIER ON;
    DECLARE @Parametros VARCHAR(MAX)= CONCAT('@FuncionarioId=', CONVERT(VARCHAR, @FuncionarioId));
    DECLARE @NombreObjeto VARCHAR(256)= OBJECT_NAME(@@PROCID);
    

    ---------------------------------------------
    -- Declaraciones
    ---------------------------------------------
    DECLARE @AuditoriaActivo VARCHAR(255);
    DECLARE @ContratoVigente VARCHAR(255);
    DECLARE @ContratoPendienteLiquidar VARCHAR(255);
    DECLARE @NominaAplicada VARCHAR(255);
    DECLARE @NominaFuncionarioLiquidado VARCHAR(255);
	DECLARE @FechaInicio DATE;
	DECLARE @FechaFin DATE;
	DECLARE @FechaInicioContrato DATE;
    DECLARE @NominaId INT= NULL;
    DECLARE @FuncionarioExiste INT= NULL;
    DECLARE @NominaFechaFinal DATE;
    DECLARE @FechaTerminacionContrato DATE;
	DECLARE @AliasParametroPrimaLegal VARCHAR(255);
	DECLARE @AnioVigente VARCHAR(255);
	DECLARE @AnioVigenteId INT;
	DECLARE @ConceptoPrimaLegal VARCHAR(255);
	DECLARE @AliasInicioPrimaLegal VARCHAR(255);
	DECLARE @AliasFinPrimaLegal VARCHAR(255);
	DECLARE @FechaInicioPrimaLegal DATE;
	DECLARE @FechaFinPrimaLegal DATE;
	DECLARE @DiasPrima INT;
	DECLARE @ConceptoPrimaLegalId INT;	
	DECLARE @ConceptoCesantiasConsolidadas VARCHAR(255);
	DECLARE @ConceptoCesantiasConsolidadasId INT;
	DECLARE @AliasCesantiasConsolidadas VARCHAR(255);
	DECLARE @TipoLiquidacionCesantias VARCHAR(255);
	DECLARE @TipoLiquidacionCesantiasFondo VARCHAR(255);
	DECLARE @FechaFinCesantiaFondo DATE;
	DECLARE @NominaFechaInicio DATE;
	

    ---------------------------------------------
    -- Proceso
    ---------------------------------------------
    BEGIN TRY

		-- constantes de estados
		SELECT @ContratoVigente = vce.CONTRATO_VIGENTE,
			   @ContratoPendienteLiquidar = vce.CONTRATO_PENDIENTEPORLIQUIDAR,
			   @NominaAplicada = vce.NOMINA_APLICADA,
			   @NominaFuncionarioLiquidado = vce.NOMINAFUNCIONARIO_LIQUIDADO,
			   @AnioVigente = vce.ANIO_VIGENTE,
			   @AuditoriaActivo = vce.AUDITORIA_ACTIVO
		FROM util.VW_ConstanteEstado AS vce;
        
		-- Se obtienen constantes asociadas a alias de parámetros del sistema
		SELECT @AliasParametroPrimaLegal = vcpg.[CONCEPTOPRIMALEGAL],
		@AliasInicioPrimaLegal = vcpg.[INICIOPRIMALEGAL],
		@AliasFinPrimaLegal = vcpg.[FINPRIMALEGAL],
		@AliasCesantiasConsolidadas= vcpg.[CESANTIASCONSOLIDADAS]
		FROM util.VW_ConstanteParametroGeneral AS vcpg;

		SELECT @TipoLiquidacionCesantias = vctl.[CODIGO_CONSOLIDACIONCESANTIAS],	
		@TipoLiquidacionCesantiasFondo = vctl.[CODIGO_CESANTIASAFONDOS]	
		FROM util.VW_ConstanteCodigoTipoLiquidacion AS vctl;

		-- Se obtiene el año de trabajo vigente
		SET @AnioVigenteId = [dbo].[UFS_ObtenerAnioTrabajo](@AnioVigente);

		IF @Tipo = 'Primas'
		BEGIN
			-- Cconsultar las fechas de inicio y fin definidas de prima legal
		
			SET @FechaInicioPrimaLegal = CAST([util].[UFS_ObtenerParametro](@AliasInicioPrimaLegal, @AnioVigenteId) AS DATE);
			SET @FechaFinPrimaLegal = CAST([util].[UFS_ObtenerParametro](@AliasFinPrimaLegal, @AnioVigenteId) AS DATE);

			SET @FechaFin = @FechaFinPrimaLegal;

			-- Consulta fecha inicio contrato vigente 
			SELECT @FechaInicioContrato = FechaInicio
			FROM dbo.Contrato AS c
			WHERE FuncionarioId = @FuncionarioId
					AND Estado = @ContratoVigente
					AND EstadoRegistro = @AuditoriaActivo;

			IF @FechaInicioContrato > @FechaInicioPrimaLegal
			BEGIN
				SET @FechaInicio = @FechaInicioContrato;
			END;
			ELSE
			BEGIN
				SET @FechaInicio = @FechaInicioPrimaLegal;
			END;		
	
			PRINT CONCAT('@FechaInicio= ',@FechaInicio);
			PRINT CONCAT('@FechaFin= ',@FechaFin);
			-- se calculan la cantidad de días
		
			SET @DiasPrima = DATEDIFF(DAY, @FechaInicio, @FechaFin); 

			IF @DiasPrima > 180
			BEGIN
				SET @DiasPrima = 180;
			END;
		END;			   	

		
		IF @Tipo = 'Definitivo' OR @Tipo = 'Cesantias'
		BEGIN
			
			-- Consulta fecha inicio y terminacion contrato pendienteliquidar
			SELECT @FechaInicioContrato = FechaInicio,
				   @FechaTerminacionContrato = FechaTerminacion
			FROM dbo.Contrato AS c
			WHERE FuncionarioId = @FuncionarioId
					AND Estado = @ContratoPendienteLiquidar
					AND EstadoRegistro = @AuditoriaActivo;
			
			IF @Tipo = 'Definitivo'
			BEGIN
				-- Se obtiene alias concepto de prima legal
				SELECT @ConceptoPrimaLegal = [util].[UFS_ObtenerParametro] 
				(@AliasParametroPrimaLegal,@AnioVigenteId);		

				-- Consultamos id de concepto
				SELECT @ConceptoPrimaLegalId = Id
				FROM ConceptoNomina
				WHERE Alias = @ConceptoPrimaLegal
				AND EstadoRegistro = @AuditoriaActivo;			

				-- Consultar última liq de primas 
				SELECT TOP 1 @NominaFechaFinal = n.FechaFinal
				FROM Nomina AS n
					 INNER JOIN dbo.NominaFuncionario AS nf ON(n.Id = nf.NominaId)
					 INNER JOIN dbo.NominaDetalle AS nd ON nf.Id = nd.NominaFuncionarioId             
				WHERE nd.ConceptoNominaId = @ConceptoPrimaLegalId AND nd.Valor > 0
					  AND n.Estado = @NominaAplicada
					  AND nf.FuncionarioId = @FuncionarioId
					  AND (@FechaInicioContrato BETWEEN n.FechaInicio AND n.FechaFinal
								  OR @FechaTerminacionContrato BETWEEN n.FechaInicio AND n.FechaFinal)                           
					  AND n.EstadoRegistro = @AuditoriaActivo
					  AND nf.EstadoRegistro = @AuditoriaActivo
					  AND nd.EstadoRegistro = @AuditoriaActivo
				ORDER BY n.FechaFinal DESC;

				IF @NominaFechaFinal IS NULL
				BEGIN
					SET @FechaInicio = @FechaInicioContrato;
					SET @FechaFin = @FechaTerminacionContrato;
				END;
				ELSE
				BEGIN
					SET @FechaInicio = DATEADD(DAY, 1, @NominaFechaFinal);
					SET @FechaFin = @FechaTerminacionContrato;
				END;
			END;

			IF @Tipo= 'Cesantias'
			BEGIN				
				-- Se obtiene alias concepto de cesantias consolidadas
				SELECT @ConceptoCesantiasConsolidadas = [util].[UFS_ObtenerParametro] 
				(@AliasCesantiasConsolidadas,@AnioVigenteId);		

				-- Consultamos id de concepto
				SELECT @ConceptoCesantiasConsolidadasId = Id
				FROM ConceptoNomina
				WHERE Alias = @ConceptoCesantiasConsolidadas
				AND EstadoRegistro = @AuditoriaActivo;

				-- Consultamos última consolidación de cesantias en la que se encuentre el funcionario.
				SELECT TOP 1 @NominaFechaInicio = n.FechaInicio, @NominaFechaFinal = n.FechaFinal
				FROM Nomina AS n
					 INNER JOIN dbo.NominaFuncionario AS nf ON(n.Id = nf.NominaId)
					 INNER JOIN dbo.NominaDetalle AS nd ON nf.Id = nd.NominaFuncionarioId     
					 INNER JOIN dbo.TipoLiquidacion AS tl ON n.TipoLiquidacionId = tl.Id
				WHERE nd.ConceptoNominaId = @ConceptoCesantiasConsolidadasId AND nd.Valor > 0
					  AND tl.Codigo = @TipoLiquidacionCesantias
        			  AND n.Estado = @NominaAplicada
					  AND nf.FuncionarioId = @FuncionarioId
					  AND (@FechaInicioContrato BETWEEN n.FechaInicio AND n.FechaFinal
								  OR @FechaTerminacionContrato BETWEEN n.FechaInicio AND n.FechaFinal)                           
					  AND n.EstadoRegistro = @AuditoriaActivo
					  AND nf.EstadoRegistro = @AuditoriaActivo
					  AND nd.EstadoRegistro = @AuditoriaActivo
				ORDER BY n.FechaFinal DESC;

				IF @NominaFechaFinal IS NULL
				BEGIN
					SET @FechaInicio = @FechaInicioContrato;
					SET @FechaFin = @FechaTerminacionContrato;
				END;
				ELSE
				BEGIN
					--- Se consulta último envío de cesantias a fondo.				
					SELECT TOP 1 @FechaFinCesantiaFondo = n.FechaFinal
					FROM Nomina AS n
							INNER JOIN dbo.NominaFuncionario AS nf ON(n.Id = nf.NominaId)             
							INNER JOIN dbo.TipoLiquidacion AS tl ON n.TipoLiquidacionId = tl.Id
					WHERE tl.Codigo = @TipoLiquidacionCesantiasFondo
        					AND n.Estado = @NominaAplicada
							AND nf.FuncionarioId = @FuncionarioId
							AND (@FechaInicioContrato BETWEEN n.FechaInicio AND n.FechaFinal
										OR @FechaTerminacionContrato BETWEEN n.FechaInicio AND n.FechaFinal)    
							AND n.FechaFinal >= @NominaFechaFinal
							AND n.EstadoRegistro = @AuditoriaActivo
							AND nf.EstadoRegistro = @AuditoriaActivo              
					ORDER BY n.FechaFinal DESC;

					IF @FechaFinCesantiaFondo IS NULL
					BEGIN 
						SET @FechaInicio = @NominaFechaInicio;
						SET @FechaFin = @FechaTerminacionContrato;
					END;
					ELSE
					BEGIN
						SET @FechaInicio = DATEADD(DAY, 1, @NominaFechaFinal);
						SET @FechaFin = @FechaTerminacionContrato;
					END;				
				END;
			END;

			SET @DiasPrima = DATEDIFF(DAY, @FechaInicio, @FechaFin);
		END;

		IF @DiasPrima IS NULL
		BEGIN
			SET @DiasPrima = 0;
		END;
			   
		SET @Cantidad = @DiasPrima;

    END TRY
    BEGIN CATCH

        -- Se almacena la información del error
        EXEC util.USP_Registrarerror
             @NombreObjeto,
             @Parametros;

        -- Se lanza la excepción
        EXEC util.USP_LanzarExcepcion;
    END CATCH;
END;
]]>
</sql>
<rollback>
<sql endDelimiter="GO" splitStatements="true">
<![CDATA[
DROP PROCEDURE [dbo].[USP_ObtenerDiasAPagarPrima];
]]>
</sql>
</rollback>
</changeSet>

</databaseChangeLog>