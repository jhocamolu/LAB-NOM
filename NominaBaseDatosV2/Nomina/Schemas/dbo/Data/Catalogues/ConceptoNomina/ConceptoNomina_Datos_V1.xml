<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

<changeSet author="rsabogal" id="ConceptoNomina_Datos_v1">
<sql endDelimiter="\nGO" splitStatements="true">
<![CDATA[
SET IDENTITY_INSERT [dbo].[ConceptoNomina] ON 
GO
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('1', NULL, 'Fijo', 'Devengo', 'DEV101', 'SalBasico', 'Salario basico', '1', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'Corresponde a la suma fija pactada por la Compañía con sus funcionarios como contraprestación principal y directa que recibe el trabajador por sus servicios. Este concepto se utiliza para registrar en la nómina el pago del sueldo a los empleados con salario normal. Siempre se pagan meses de 30 días. distribuidos de acuerdo a los periodos de pago que tenga establecidos la compañia. El salario mínimo legal ordinario se ajusta el 1 de enero de cada año.', 'SI(TIPO_CONTRATO=1;SALARIO_BASICO;0)+SI(Y(TIPO_CONTRATO=2;SALARIO_BASICO>=SALARIO_MINIMO_ACTUAL*13;SALARIO_BASICO;NOTIFICAR)+SI(TIPO_CONTRATO=3;SALARIO_BASICO;0)', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('2', NULL, 'Fijo', 'Devengo', 'DEV111', 'AuxTransporte', 'Auxilio de transporte', '11', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'Son beneficiarios de este pago. los funcionarios que devenguen hasta dos salarios mínimo legal vigente.
Casos en los que no se paga el subsidio de transporte: 
* Cuando el funcionario está disfrutando de sus vacaciones. * Cuando la funcionaria este en licencia de maternidad. 
* Por el tiempo que dure un ausentismo del funcionario. bien sea de clase incapacidad. licencia remunerada o licencia no remunerada. * Cuando devengue más de dos salarios mínimos legales vigentes.', 'SI(Y(TIPO_CONTRATO<>3;CANTIDAD_SUELDO_QUINCENA=1);AUXILIO_TRANSPORTE;0))+ SI(Y(TIPO_CONTRATO<>3;CANTIDAD_SUELDO_QUINCENA=0;SUELDO_BASICO <= 2 * SALARIO_MINIMO_ACTUAL); (AUXILIO_TRANSPORTE_ACTUAL/30)*DIAS_LABORADO_MES;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('3', NULL, 'Novedad', 'Devengo', 'DEV113', 'AuxEconomico', 'auxilio económico óptico', '13', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Tiene derecho una vez al año. se envia carta de solicitud mediante formato el valor para el año 2019 es $ 200.000. y se paga una vez empleado lleve la factura y el examen oftalmologico expedido por la EPS en la que se encuentra afiliado.', 'MONTO', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('4', NULL, 'Novedad', 'Devengo', 'DEV114', 'AuxEducativo', 'auxilio económico educativo', '14', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Empleados normales. tienen derecho a postgrado y si esta sindicalizado inclusive a pregrado. se debe determinar la capacidad de endeudamiento ya que inicialmente va como un prestamo que sera condonado una vez concluya los estudios adjunte el acta de grado y permanecer laborando en la compañia por el doble del tiempo de duración de estudio realizado. el estudio de be ser acorde al cargo. debe tener 2 años de antigüedad. y evaluacion de desempeño mayor a 90%.', 'MONTO', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('5', NULL, 'Novedad', 'Devengo', 'DEV115', 'AuxCalamidad', 'Préstamo económico por calamidad domestica', '15', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'El artículo 1 del Acuerdo Nº 2194 de 2003 de la Sala Administrativa de Consejo Superior de la Judicatura. define calamidad domestica de la siguiente forma: Parágrafo Primero. Se entiende por calamidad doméstica. todo suceso familiar cuya gravedad afecte el normal desarrollo de las actividades del funcionario. como el fallecimiento. enfermedad o lesión grave de sus parientes hasta el cuarto grado de consanguinidad. segundo de afinidad o primero civil. del cónyuge. compañero o compañera permanente. el secuestro o la desaparicion del mismo. una afectacion seria de la vivienda del trabajador. o de su familia. por caso fortuito o fuerza mayor como incendio. inundacion o terremoto...', 'MONTO', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('6', NULL, 'Novedad', 'Devengo', 'DEV116', 'AuxRodamiento', 'auxilio de rodamiento', '16', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'El auxilio de rodamiento. es el valor que la empresa paga a un empleado cuando este aporta o utiliza su vehículo [automóvil o moto] para desarrollar actividades relacionadas con el contrato de trabajo.', '(MONTO/30)*DIAS_LABORADOS_MES', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('7', NULL, 'Novedad', 'Devengo', 'DEV117', 'AuxAlojamiento', 'Auxilio de alojamiento', '17', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'El auxilio de alojamiento. es el valor la empresa paga a un empleado cuando cubre una parte de la vivienda del trabajador cuando con ocasión del servicio. se traslade a un lugar diferente al de su resicdencia', 'MONTO', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('8', NULL, 'Novedad', 'Devengo', 'DEV120', 'Enfgeneral', 'Enfermedad general empresa', '20', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'Los 2 primeros días deben ser pagados por la empresa al 100%.', 'SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(BASE_IBC_MES/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('9', NULL, 'Novedad', 'Devengo', 'DEV121', 'Enfgeneraldos', 'Enfermedad general a partir del día 3 hasta el día 90', '21', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'A partir del día 3 y hasta el día 90 el IBC reportado en PILA debe ser mínimo del 66.67% del salario básico. siempre y cuando la proporción de éste no se inferior al monto del SMMLV.', 'SI(Y(BASE_IBC_ANTERIOR<>0;((IBC_MES_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.67<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;((BASE_IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.67>SALARIO_MINIMO_ACTUAL;((IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.67;0)+
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.67>SALARIO_MINIMO_ACTUAL);((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.67;0)+ 
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.67<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('10', NULL, 'Novedad', 'Devengo', 'DEV122', 'Enfgeneraltres', 'Enfermedad general a partir del día 91 hasta el día 180', '22', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'A partir del día 91 y hasta el día 180 el IBC reportado en PILA debe ser mínimo del 50% del salario básico. siempre y cuando la proporción de éste no se inferior al monto del SMMLV. Esta incapacidad la paga la EPS.', 'SI(Y(BASE_IBC_ANTERIOR<>0;((IBC_MES_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;((BASE_IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5>SALARIO_MINIMO_ACTUAL;((IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5;0)+
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5>SALARIO_MINIMO_ACTUAL);((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5;0)+ 
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('11', NULL, 'Novedad', 'Devengo', 'DEV123', 'Enfgeneralcuatro', 'Enfermedad general a partir del día 181hasta el día 540 (inclusive)', '23', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'A partir del día 181 y hasta el día 540 el IBC reportado en PILA debe ser mínimo del 50% del salario básico. siempre y cuando la proporción de éste no se inferior al monto del SMMLV. Esta incapacidad la paga la AFP', 'SI(Y(BASE_IBC_ANTERIOR<>0;((IBC_MES_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;((BASE_IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5>SALARIO_MINIMO_ACTUAL;((IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5;0)+
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5>SALARIO_MINIMO_ACTUAL);((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5;0)+ 
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('12', NULL, 'Novedad', 'Devengo', 'DEV124', 'Enfgeneralcinco', 'Enfermedad general a partir de los 541 días', '24', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'A partir del día 541 el IBC reportado en PILA debe ser mínimo del 50% del salario básico. siempre y cuando la proporción de éste no se inferior al monto del SMMLV. Esta incapacidad la paga la EPS', 'SI(Y(BASE_IBC_ANTERIOR<>0;((IBC_MES_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;((BASE_IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5>SALARIO_MINIMO_ACTUAL;((IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO)*0.5;0)+
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5>SALARIO_MINIMO_ACTUAL);((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5;0)+ 
SI(Y(BASE_IBC_ANTERIOR=0;((BASE_IBC_MES/30)*CANTIDAD_CONCEPTO)*0.5<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('13', NULL, 'Novedad', 'Devengo', 'DEV125', 'AcTrabajo', 'Incapacidad Accidente de Trabajo (Empresa)', '25', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'El primer dia de ocurrido el accidente', 'SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(BASE_IBC_MES/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('14', NULL, 'Novedad', 'Devengo', 'DEV126', 'AcTrabajoArl', 'incapacidad Accidente de Trabajo (ARL)', '26', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'Apartir del dia 2 en adelante. incluso hasta el dia 540 de ser el caso', 'SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(BASE_IBC_MES/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('15', NULL, 'Novedad', 'Devengo', 'DEV127', 'EnfLaboral', 'Incapacidad Enfermedad de Origen Laboral (Empresa)', '27', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'El primer dia de ocurrido el accidente', 'SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(BASE_IBC_MES/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('16', NULL, 'Novedad', 'Devengo', 'DEV128', 'EnfLaboralArl', 'incapacidad Origen Laboral (ARL)', '28', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'Apartir del dia 2 en adelante. incluso hasta el dia 540 de ser el caso', 'SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+
SI(Y(BASE_IBC_ANTERIOR<>0;BASE_IBC_ANTERIOR()/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(IBC_ANTERIOR/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)>SALARIO_MINIMO_ACTUAL);(BASE_IBC_MES/30)*CANTIDAD_CONCEPTO;0)+
SI(Y(BASE_IBC_ANTERIOR=0;BASE_IBC_MES/30*(CANTIDAD_CONCEPTO)<=SALARIO_MINIMO_ACTUAL);SALARIO_MINIMO_ACTUAL;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('17', NULL, 'Novedad', 'Devengo', 'DEV129', 'LicRemunerada', 'Licencia remunerada', '29', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'Se refiere a que el empleador concede un permiso al trabajador sin descontarle dias de sueldo. ( Servicio Médico. Calamidad Dosmética. Derecho al Sufragio. etc).', 'SALARIO_BASICO / 30 * CANTIDAD_CONCEPTO', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('18', NULL, 'Novedad', 'Cálculo', 'DEV130', 'LicNoRemunerada', 'Licencia no remunerada', '30', '1', 'DelFuncionario', 'DelFuncionario', '0', '1', 'Días', NULL, NULL, 'Se refiere a que el empleador no concede un permiso al trabajador sin descontarle dias de sueldo. ( Permisos. sanciones o suspensiones. etc).', 'SI(CANTIDAD_SUELDO_QUINCENA=1;LICENCIA;SUELDO_BASICO/30*CANTIDAD_CONCEPTO)', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('19', NULL, 'Fijo', 'Deducción', 'DED201', 'SaludFuncionario', 'Aporte a salud funcionario', '1', '1', 'DelFuncionario', 'De la administradora', '0', '0', 'Unidad', NULL, NULL, 'Corresponde al descuento del 4% que aporta el empleado al sistema de seguridad social.', 'SI(Y(TIPO_CONTRATO=1;BaseIbcMes<>0);BaseIbcMes * 0.04;0)+ SI(Y(TIPO_CONTRATO=2;Y(BaseIbcMes>0;BaseIbcMes<=(SALARIO_MINIMO_ACTUAL*25)));(BaseIbcMes*0.7) * 0.04;(SALARIO_MINIMO_ACTUAL*25)*0.04)+SI(Y(TIPO_CONTRATO=3;BaseIbcMes<>0);0;0)+0', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('20', NULL, 'Fijo', 'Deducción', 'DED202', 'PensionFuncionario', 'Aporte a pensión empleado', '2', '1', 'DelFuncionario', 'De la administradora', '0', '0', 'Unidad', NULL, NULL, 'Corresponde al descuento del 4% que aporta el empleador al sistema de seguridad social.', 'IBC_MES_ACTUAL * 0.04', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('21', NULL, 'Novedad', 'Deducción', 'DED205', 'Libranzas', 'Libranzas', '5', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Novedad fija correspondiente al préstamo que realiza la entidad bancaria.', 'SI((Base_ingresos-SaludFuncionario-Embargo) < (SALARIO_MINIMO_ACTUAL * 0.5)/2);NOTIFICAR;MONTO)', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('22', NULL, 'Novedad', 'Deducción', 'DED210', 'EmbEjecutivo', 'Embargo ejecutivo', '10', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Novedad fija reportada según el oficio entregado por el Juzgado Civil respectivo. se debe dar mediante una orden judicial de embargo.Sea cual sea la situación. la orden de embargo. desplaza y “reemplaza” cualquier otro descuento que se le aplique al trabajador. pero por ningún motivo podrá devengar menos de la mitad de un salario mínimo legal vigente. Conforme al artículo 155 del Código Sustantivo del Trabajo (CST). “el excedente del salario mínimo mensual solo es embargable en una quinta parte”. o sea el 20%.', 'SI((BaseIBC-BASEDESCUENTOS)<(SALARIO_MINIMO_ACTUAL*0.5)/2;NOTIFICAR;MONTO)(CALCULO_EMBARGO)', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('23', NULL, 'Novedad', 'Deducción', 'DED211', 'EmbAlimentos', 'Embargo alimentos', '11', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'El embargo de alimentos desplaza y “reemplaza” cualquier otro embargo previamente aplicado. se debe dar mediante una orden judicial de embargo. El artículo 130 del Código de la Infancia y la Adolescencia advierte que “cuando el obligado a suministrar alimentos fuere asalariado. el juez podrá ordenar al respectivo pagador o al patrono descontar y consignar a órdenes del juzgado. hasta el cincuenta por ciento (50%) de lo que legalmente compone el salario mensual del demandado. y hasta el mismo porcentaje de sus prestaciones sociales. luego de las deducciones de ley”.', 'SI((BaseIBC-BASEDESCUENTOS)<(SALARIO_MINIMO_ACTUAL*0.5)/2;NOTIFICAR;MONTO)', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('24', NULL, 'Novedad', 'Deducción', 'DED212', 'EmbCooperativas', 'Embargo cooperativas', '12', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Por deudas alimentarias o con cooperativas. podrá embargarse incluso el salario minimo hasta por el 50%. De acuerdo con el artículo 156 del CST. “todo salario puede ser embargado hasta en un cincuenta por ciento (50%) en favor de cooperativas legalmente autorizadas. Ver normatividad', 'SI((BaseIBC-BASEDESCUENTOS)<(SALARIO_MINIMO_ACTUAL*0.5)/2;NOTIFICAR;MONTO)', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('25', NULL, 'Novedad', 'Deducción', 'DED213', 'EmbCoactivo', 'Embargo Coactivo', '13', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Es aquel que surge cuando la persona a incumplido con su deber como jurado de votación.', 'SI((BaseIBC-BASEDESCUENTOS)<(SALARIO_MINIMO_ACTUAL*0.5)/2;NOTIFICAR;MONTO)', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('26', NULL, 'Novedad', 'Deducción', 'DED214', 'Descuento Préstamo Económico Por Calamidad', 'Descuento préstamo económico por calamidad', '14', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Alcanos de Colombia S.A. ES.P. ofrece a sus colaboradores un préstamo económico sin intereses por un monto máximo hasta de 4 Salarios Mínimos Mensuales Legales Vigentes en caso de Calamidad', 'MONTO', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('27', NULL, 'Novedad', 'Deducción', 'DED215', 'Descuento Préstamo Económico Educativo', 'Descuento préstamo económico educativo', '15', '1', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'La Compañía ofrece a sus colaboradores un auxilio económico para adelantar sus estudios de posgrado y pregrado para sindicalizados. el cual se debe tener en cuenta unos requisitos.', 'MONTO', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('28', NULL, 'Fijo', 'Deducción', 'DED231', 'ARL', 'Riesgos Laborales', '31', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Esta tasa la determina el riesgo al que está expuesto el trabajador y está asociada a los centros de trabajo que tiene la empresa. Ingreso Base de Cotización (IBC): Total del salario reportado por la empresa que devenga el trabajador. Se considera salario la remuneración ordinaria y demás retribuciones. bien sean en dinero o especie. tales como primas. sobresueldos. bonificaciones habituales. horas extras. etc.', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('29', NULL, 'Fijo', 'Deducción', 'DED232', 'Ccf', 'CCF', '32', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Las Cajas de Compensación Familiar. en Colombia. son entidades privadas. sin ánimo de lucro. de redistribución económica y naturaleza solidaria. el objetivo de su creación es mejorar la calidad de vida de las familias de los trabajadores. El empleador hace un aporte del 4% CCF.', 'IBC_MES_ACTUAL*0.04', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('30', NULL, 'Fijo', 'Deducción', 'DED233', 'Sena', 'SENA', '33', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Servicio Nacional de Aprendizaje. el empleador hace un aporte del 2%.Art.114-1 ET. Exoneracion de aportes adicionado por el Art. 65 de la Ley 1819 del 2016. Para los trabajadores que devenguen menos de 10 SMMLV.', 'IBC_MES_ACTUAL*0.02', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('31', NULL, 'Fijo', 'Deducción', 'DED234', 'Icbf', 'ICBF', '34', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'El Instituto Colombiano de Bienestar Familiar. el empleador hace un aporte del 3%. Art.114-1 ET. Exoneracion de aportes adicionado por el Art. 65 de la Ley 1819 del 2016. Para los trabajadores que devenguen menos de 10 SMMLV.', 'IBC_MES_ACTUAL*0.03', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('32', NULL, 'Fijo', 'Cálculo', 'CAL300', 'BaseIbc', 'Base IBC Quincenal', '1', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Base para cálcular las deducciones de seguridad social. salud y pensiones', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('33', NULL, 'Fijo', 'Cálculo', 'CAL301', 'BaseIbcMes', 'Base IBC Mes', '2', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, '', 'BASE_MES', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('34', NULL, 'Fijo', 'Cálculo', 'CAL302', 'BasePrimaLegal', 'Base prima legal', '3', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'base para calcular todos los conceptos que son base para prima legal en la quincena', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('35', NULL, 'Fijo', 'Cálculo', 'CAL303', 'ProvPrimaLegal', 'Provisión prima legal', '4', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'La prima de servicios es una prestación social que consiste en el pago de 30 días de salario por cada año trabajado. o en proporción al tiempo trabajado cuando este es inferior a un año.', '(BASE_PRIMA_LEGAL_MES * DIAS_LABORADOS_MES) / 360', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('36', NULL, 'Fijo', 'Cálculo', 'CAL304', 'Base_ingresos', 'Base de todos los conceptos de devengo', '5', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Su función es calcular el Valor que se tiene de la libranza para validar si se puede descontar el valor de la libranza de acuerdo al mínimo vital', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('37', NULL, 'Fijo', 'Cálculo', 'CAL305', 'BaseSemestral', 'Base prima extralegal', '6', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, '', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('38', NULL, 'Fijo', 'Cálculo', 'CAL306', 'ProvExtraSemestral', 'Provisión Prima Extralegal (Bono Semestral)', '7', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Prima Extralegal. es un bono que la compañía ofrece a los funcionarios que llevan mas de 1 año de servicio y equivale a un salario por año pagaderos 50% en junio y 50% en diciembre.', 'Salario* Dias Laborados / 360', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('39', NULL, 'Fijo', 'Cálculo', 'CAL307', 'ProvCesantias', 'Provisión Cesantias', '8', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Las cesantias es una prestación social a cargo del empleador y a favor del trabajador que corresponde en un mes de salario por cada año de servicios prestados o proporcionalmente al tiempo de servicio', '(BaseCesantias * DIAS_TRABAJADOS) / 360', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('40', NULL, 'Fijo', 'Cálculo', 'CAL308', 'ProvIntCesantias', 'Provisión Intereses de Cesantias.', '9', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'El empleador debe pagar a sus empleados intereses sobre las cesantías que tenga acumuladas a 31 de diciembre. a una tasa del 12% anual.', 'Valor Cesantias* Días Laborados * 12% / 360', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('41', NULL, 'Fijo', 'Cálculo', 'CAL309', 'ProvVacaciones', 'Provisión Vacaciones', '10', '0', 'DelFuncionario', 'DelFuncionario', '0', '0', 'Unidad', NULL, NULL, 'Las vacaciones laborales son el derecho que tiene todo trabajador dependiente que ha prestado sus servicios durante un año. de disfrutar de un tiempo de descanso que debe ser remunerado y pagado por el empleador. Dicho período de disfrute equivale a quince días hábiles consecutivos. que se deberán conceder al trabajador dentro del año siguiente al cumplimiento del año de la prestación de sus servicios. que origina el derecho al tiempo de descanso. Las vacaciones laborales también pueden ser pagadas monetariamente por parte del empleador. en este caso. el trabajador no disfrutará de ellas físicamente.', 'Salario Mensual * Días Laborados / 720', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('42', NULL, 'Fijo', 'Cálculo', 'CAL310', 'BaseCesantiasParciales', 'Base cesantías parciales', '11', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Bajo este concepto se registran los anticipos pagados a los empleados en el transcurso del año por concepto de cesantías.', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('43', NULL, 'Fijo', 'Cálculo', 'CAL311', 'BaseCesantias', 'Base cesantías', '12', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Bajo este concepto se registran los pagos por conceptos de cesantías definitivas en liquidación de contrato. acumulado a diciembre 31 de cada año o proporcional a la fecha de liquidación. En caso de existir un incremento de sueldo en los últimos 90 días a la fecha de liquidación. se debe realizar promedio del año en curso fiscal.', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('44', NULL, 'Fijo', 'Cálculo', 'CAL312', 'NetoSeguridadSocial', 'Valor neto de seguridad social', '13', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Concepto utilizado para mostrar el valor neto de seguridad social en la aprobación/aplicación de la nómina', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('45', NULL, 'Fijo', 'Cálculo', 'CAL313', 'NetoARL', 'Valor neto de ARL', '14', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Concepto utilizado para mostrar el valor neto de ARL en la aprobación/aplicación de la nómina', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('46', NULL, 'Fijo', 'Cálculo', 'CAL314', 'NetoParafiscales', 'Valor Neto de parafiscales', '15', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Concepto utilizado para mostrar el valor neto parafiscales calculado en la aprobación/aplicación de la nómina', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('47', NULL, 'Fijo', 'Cálculo', 'CAL315', 'NetoProvisiones', 'Valor neto de provisiones', '16', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Concepto utilizado para mostrar el valor neto de provisiones calculado en la aprobación/aplicación de la nómina', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('48', NULL, 'Fijo', 'Cálculo', 'CAL320', 'TotalHorasExtras', 'Agrupador de horas extras', '21', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Concepto utilizado para mostrar el valor total de horas extras del funcionario', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
INSERT INTO dbo.ConceptoNomina
(Id, FuncionNominaId, TipoConceptoNomina, ClaseConceptoNomina, Codigo, Alias, Nombre, Orden, VisibleImpresion, OrigenCentroCosto, OrigenTercero, ConceptoAgrupador, RequiereCantidad, UnidadMedida, NitTercero, DigitoVerificacion, Descripcion, Formula, ProcedimientoSql, ProcedimientoNombre, EstadoRegistro, CreadoPor, FechaCreacion)
VALUES('49', NULL, 'Fijo', 'Cálculo', 'CAL321', 'TotalAusentismos', 'Agrupador de ausentismos', '22', '0', 'DelFuncionario', 'DelFuncionario', '1', '0', 'Unidad', NULL, NULL, 'Concepto utilizado para mostrar el valor total de ausentismos del funcionario', '', NULL, NULL, 'Activo    ', 'sistema', GETDATE());
GO
SET IDENTITY_INSERT [dbo].[ConceptoNomina] OFF
GO
]]>
</sql>

<rollback>

<![CDATA[
DELETE FROM [dbo].[dbo.ConceptoNomina] WHERE Id BETWEEN 1 AND 8;
]]>

</rollback>
</changeSet>
</databaseChangeLog>