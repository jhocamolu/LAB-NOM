<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

<changeSet author="lestrada" id="SolicitudVacaciones_V1">
<sql endDelimiter="GO" splitStatements="true">
<![CDATA[
CREATE TABLE [SolicitudVacaciones] (
    [Id] int NOT NULL IDENTITY,
    [FuncionarioId] int NOT NULL,
    [LibroVacacionesId] int NOT NULL,
    [NominaId] int NOT NULL,
    [FechaInicioDisfrute] date NOT NULL,
    [DiasDisfrute] tinyint NOT NULL,
    [FechaFinDisfrute] date NOT NULL,
    [DiasDinero] tinyint NOT NULL,
    [Observacion] text NULL,
    [Estado] varchar(255) NOT NULL,
    [Justificacion] text NULL,
    [FechaPago] date NOT NULL,
    [Remuneracion] money NOT NULL,
    [FechaRegreso] date NOT NULL,
	[EstadoRegistro] char(10) NULL,
    [CreadoPor] varchar(255) NULL,
    [FechaCreacion] smalldatetime NULL,
    [ModificadoPor] varchar(255) NULL,
    [FechaModificacion] smalldatetime NULL,
    [EliminadoPor] varchar(255) NULL,
    [FechaEliminacion] smalldatetime NULL,
    CONSTRAINT [PK_SolicitudVacaciones] PRIMARY KEY ([Id]),
    CONSTRAINT [CK_SolicitudVacaciones_EstadoRegistro] CHECK (([EstadoRegistro]='Eliminado' OR [EstadoRegistro]='Inactivo' OR [EstadoRegistro]='Activo')),
    CONSTRAINT [CK_SolicitudVacaciones_Estado] CHECK (([Estado]='Aprobada' OR [Estado]='Autorizada' OR [Estado]='Cancelada' OR [Estado]='EnCurso' OR [Estado]='Interrumpida' OR [Estado]='Rechazada' OR [Estado]='Solicitada'  OR [Estado]='Terminada')),
    CONSTRAINT [FK_SolicitudVacaciones_Funcionario_FuncionarioId] FOREIGN KEY ([FuncionarioId]) REFERENCES [Funcionario] ([Id]) ON DELETE NO ACTION,
    CONSTRAINT [FK_SolicitudVacaciones_LibroVacaciones_LibroVacacionesId] FOREIGN KEY ([LibroVacacionesId]) REFERENCES [LibroVacaciones] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_SolicitudVacaciones_Nomina_NominaId] FOREIGN KEY ([NominaId]) REFERENCES [Nomina] ([Id]) ON DELETE CASCADE
);


GO

CREATE INDEX [IX_SolicitudVacaciones_FuncionarioId] ON [SolicitudVacaciones] ([FuncionarioId]);

GO

CREATE INDEX [IX_SolicitudVacaciones_LibroVacacionesId] ON [SolicitudVacaciones] ([LibroVacacionesId]);

GO

CREATE INDEX [IX_SolicitudVacaciones_NominaId] ON [SolicitudVacaciones] ([NominaId]);

GO

]]>
</sql>
<rollback>
<sql endDelimiter="GO" splitStatements="true">
<![CDATA[
DROP TABLE [SolicitudVacaciones];
]]>
</sql>
</rollback>
</changeSet>

</databaseChangeLog>